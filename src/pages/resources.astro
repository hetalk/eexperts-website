---
/*
 * Resources & Downloads Page
 * Last Updated: 2025-09-16 08:56:10 IST
 *
 * Features:
 * - Downloadable whitepapers and guides
 * - Service brochures
 * - Case study PDFs
 * - Lead capture forms
 * - Resource categories
 */

import BaseLayout from '../layouts/BaseLayout.astro';
import OptimizedImage from '../components/OptimizedImage.astro';

const resources = [
  {
    id: 'healthcare-qa-guide',
    title: 'Healthcare Documentation QA Best Practices',
    description: 'Comprehensive guide to implementing quality assurance processes for medical documentation with HIPAA compliance.',
    type: 'Guide',
    category: 'Healthcare',
    pages: 24,
    downloadUrl: '/downloads/healthcare-qa-guide.pdf',
    thumbnail: '/images/resources/healthcare-guide-thumb.jpg',
    featured: true,
    tags: ['HIPAA', 'Quality Assurance', 'Medical Documentation', 'Compliance'],
    downloadCount: 1250
  },
  {
    id: 'software-testing-checklist',
    title: 'Complete Software Testing Checklist',
    description: 'Essential checklist covering manual testing, automated testing, API testing, and security validation protocols.',
    type: 'Checklist',
    category: 'Software Testing',
    pages: 8,
    downloadUrl: '/downloads/software-testing-checklist.pdf',
    thumbnail: '/images/resources/testing-checklist-thumb.jpg',
    featured: true,
    tags: ['Testing', 'QA', 'Automation', 'Security'],
    downloadCount: 980
  },
  {
    id: 'gis-data-processing',
    title: 'GIS Data Processing Workflow',
    description: 'Step-by-step workflow for processing geospatial data, from collection to analysis and visualization.',
    type: 'Workflow',
    category: 'Geospatial',
    pages: 16,
    downloadUrl: '/downloads/gis-processing-workflow.pdf',
    thumbnail: '/images/resources/gis-workflow-thumb.jpg',
    featured: false,
    tags: ['GIS', 'Data Processing', 'Mapping', 'Spatial Analysis'],
    downloadCount: 567
  },
  {
    id: 'electronics-bom-optimization',
    title: 'Electronics BOM Optimization Strategies',
    description: 'Proven strategies for optimizing Bill of Materials to reduce costs and improve supply chain efficiency.',
    type: 'Whitepaper',
    category: 'Electronics',
    pages: 20,
    downloadUrl: '/downloads/bom-optimization-strategies.pdf',
    thumbnail: '/images/resources/bom-optimization-thumb.jpg',
    featured: false,
    tags: ['BOM', 'Cost Reduction', 'Supply Chain', 'Electronics'],
    downloadCount: 432
  },
  {
    id: 'ai-workflows-implementation',
    title: 'AI-Driven Workflow Implementation Guide',
    description: 'How to implement AI-powered automation in your business processes for maximum efficiency and accuracy.',
    type: 'Implementation Guide',
    category: 'AI & Automation',
    pages: 32,
    downloadUrl: '/downloads/ai-workflows-guide.pdf',
    thumbnail: '/images/resources/ai-workflows-thumb.jpg',
    featured: true,
    tags: ['AI', 'Automation', 'Workflow', 'Efficiency'],
    downloadCount: 743
  },
  {
    id: 'quality-metrics-dashboard',
    title: 'Quality Metrics Dashboard Template',
    description: 'Excel template for tracking quality metrics, accuracy rates, and performance indicators across projects.',
    type: 'Template',
    category: 'Quality Assurance',
    pages: 1,
    downloadUrl: '/downloads/quality-metrics-template.xlsx',
    thumbnail: '/images/resources/metrics-template-thumb.jpg',
    featured: false,
    tags: ['Metrics', 'Dashboard', 'Excel', 'KPIs'],
    downloadCount: 1156
  },
  {
    id: 'hipaa-compliance-checklist',
    title: 'HIPAA Compliance Checklist for QA Teams',
    description: 'Essential HIPAA compliance requirements specifically designed for quality assurance teams handling healthcare data.',
    type: 'Checklist',
    category: 'Healthcare',
    pages: 12,
    downloadUrl: '/downloads/hipaa-compliance-checklist.pdf',
    thumbnail: '/images/resources/hipaa-checklist-thumb.jpg',
    featured: false,
    tags: ['HIPAA', 'Compliance', 'Healthcare', 'Security'],
    downloadCount: 892
  },
  {
    id: 'service-comparison-matrix',
    title: 'Service Comparison Matrix',
    description: 'Compare our services with traditional in-house teams and other outsourcing options across key metrics.',
    type: 'Comparison',
    category: 'Business',
    pages: 4,
    downloadUrl: '/downloads/service-comparison-matrix.pdf',
    thumbnail: '/images/resources/comparison-matrix-thumb.jpg',
    featured: false,
    tags: ['Comparison', 'Services', 'ROI', 'Decision Making'],
    downloadCount: 623
  }
];

const categories = [
  { id: 'all', name: 'All Resources', count: resources.length },
  { id: 'healthcare', name: 'Healthcare', count: resources.filter(r => r.category === 'Healthcare').length },
  { id: 'software-testing', name: 'Software Testing', count: resources.filter(r => r.category === 'Software Testing').length },
  { id: 'geospatial', name: 'Geospatial', count: resources.filter(r => r.category === 'Geospatial').length },
  { id: 'electronics', name: 'Electronics', count: resources.filter(r => r.category === 'Electronics').length },
  { id: 'ai-automation', name: 'AI & Automation', count: resources.filter(r => r.category === 'AI & Automation').length },
  { id: 'quality-assurance', name: 'Quality Assurance', count: resources.filter(r => r.category === 'Quality Assurance').length }
];

const featuredResources = resources.filter(r => r.featured);
---

<BaseLayout
  title="Resources & Downloads"
  description="Free resources, guides, and tools for quality assurance, healthcare documentation, software testing, and data processing. Download whitepapers, checklists, and templates."
>
  <!-- Hero Section -->
  <section class="bg-gradient-to-r from-primary to-secondary text-white py-16">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto text-center">
        <h1 class="text-4xl md:text-5xl font-bold mb-6">
          Resources & Downloads
        </h1>
        <p class="text-xl mb-8">
          Free guides, templates, and best practices to help you improve quality, efficiency, and compliance in your operations.
        </p>
        <div class="bg-white/20 backdrop-blur rounded-lg p-4 inline-block">
          <p class="text-lg font-medium">
            ðŸ“š {resources.length} Resources Available â€¢ ðŸ”“ 100% Free â€¢ ðŸ“ˆ Trusted by 5K+ Professionals
          </p>
        </div>
      </div>
    </div>
  </section>

  <!-- Featured Resources -->
  <section class="py-16 bg-gray-50">
    <div class="container mx-auto px-4">
      <div class="text-center mb-12">
        <h2 class="text-3xl font-bold mb-4">Featured Resources</h2>
        <p class="text-xl text-gray-600">
          Our most popular downloads chosen by industry professionals
        </p>
      </div>

      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
        {featuredResources.map((resource) => (
          <div class="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow border border-gray-100">
            <!-- Resource Thumbnail -->
            <div class="relative h-48 bg-gradient-to-br from-primary/10 to-secondary/10">
              <div class="absolute inset-0 flex items-center justify-center">
                <div class="text-center">
                  <div class="text-4xl mb-2">ðŸ“„</div>
                  <div class="text-lg font-bold text-primary">{resource.type}</div>
                </div>
              </div>
              <div class="absolute top-4 left-4 bg-primary text-white px-3 py-1 rounded-full text-sm font-medium">
                Featured
              </div>
              <div class="absolute top-4 right-4 bg-white rounded-full px-3 py-1 text-sm font-medium text-gray-700">
                {resource.pages} pages
              </div>
            </div>

            <!-- Resource Content -->
            <div class="p-6">
              <div class="mb-2">
                <span class="bg-secondary/10 text-secondary px-2 py-1 rounded text-sm font-medium">
                  {resource.category}
                </span>
              </div>

              <h3 class="text-xl font-bold mb-3 text-gray-900">{resource.title}</h3>
              <p class="text-gray-600 mb-4 leading-relaxed">{resource.description}</p>

              <!-- Tags -->
              <div class="flex flex-wrap gap-2 mb-4">
                {resource.tags.slice(0, 3).map((tag) => (
                  <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded text-xs">
                    {tag}
                  </span>
                ))}
              </div>

              <!-- Download Stats -->
              <div class="flex items-center justify-between text-sm text-gray-500 mb-4">
                <span>ðŸ“¥ {resource.downloadCount.toLocaleString()} downloads</span>
                <span>{resource.type}</span>
              </div>

              <!-- Download Button -->
              <button
                onclick={`downloadResource('${resource.id}', '${resource.title}', '${resource.downloadUrl}')`}
                class="w-full bg-gradient-to-r from-primary to-secondary text-white font-semibold py-3 px-6 rounded-lg hover:opacity-90 transition"
              >
                Download Free {resource.type}
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- All Resources with Filtering -->
  <section class="py-16 bg-white">
    <div class="container mx-auto px-4">
      <div class="text-center mb-12">
        <h2 class="text-3xl font-bold mb-4">All Resources</h2>
        <p class="text-xl text-gray-600">
          Browse our complete library of guides, templates, and tools
        </p>
      </div>

      <!-- Category Filters -->
      <div class="flex flex-wrap justify-center gap-3 mb-12">
        {categories.map((category) => (
          <button
            class="filter-btn px-4 py-2 rounded-full border-2 border-gray-200 text-gray-600 hover:border-primary hover:text-primary transition-colors"
            data-category={category.id}
          >
            {category.name}
            <span class="ml-1 text-sm">({category.count})</span>
          </button>
        ))}
      </div>

      <!-- Resources Grid -->
      <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-7xl mx-auto">
        {resources.map((resource) => (
          <div
            class="resource-card bg-white rounded-lg shadow border border-gray-100 hover:shadow-md transition-shadow"
            data-category={resource.category.toLowerCase().replace(/\s+/g, '-')}
          >
            <!-- Compact Resource Card -->
            <div class="p-4">
              <div class="flex items-start justify-between mb-3">
                <div class="text-2xl">ðŸ“„</div>
                <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded text-xs">
                  {resource.pages} {resource.pages === 1 ? 'page' : 'pages'}
                </span>
              </div>

              <h3 class="font-semibold mb-2 text-gray-900 leading-tight">{resource.title}</h3>
              <p class="text-gray-600 text-sm mb-3 leading-relaxed">{resource.description}</p>

              <!-- Category & Downloads -->
              <div class="flex items-center justify-between text-xs text-gray-500 mb-3">
                <span class="bg-secondary/10 text-secondary px-2 py-1 rounded font-medium">
                  {resource.category}
                </span>
                <span>ðŸ“¥ {resource.downloadCount}</span>
              </div>

              <!-- Download Button -->
              <button
                onclick={`downloadResource('${resource.id}', '${resource.title}', '${resource.downloadUrl}')`}
                class="w-full bg-primary text-white font-medium py-2 px-4 rounded hover:bg-primary/90 transition text-sm"
              >
                Download
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Newsletter Signup -->
  <section class="py-16 bg-gradient-to-br from-primary/5 to-secondary/5">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto text-center">
        <h2 class="text-3xl font-bold mb-4">Get New Resources First</h2>
        <p class="text-xl text-gray-600 mb-8">
          Subscribe to receive new guides, templates, and industry insights directly in your inbox.
        </p>

        <form class="max-w-md mx-auto flex gap-3">
          <input
            type="email"
            placeholder="Enter your email address"
            class="flex-1 px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
            required
          />
          <button
            type="submit"
            class="bg-primary text-white px-6 py-3 rounded-lg font-semibold hover:bg-primary/90 transition"
          >
            Subscribe
          </button>
        </form>

        <p class="text-sm text-gray-500 mt-4">
          No spam, unsubscribe anytime. We respect your privacy.
        </p>
      </div>
    </div>
  </section>

  <!-- Download Modal -->
  <div id="download-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center p-4">
    <div class="bg-white rounded-xl max-w-md w-full p-6">
      <h3 class="text-xl font-bold mb-4">Download Resource</h3>
      <p class="text-gray-600 mb-6">
        To download this resource, please provide your email address. We'll also send you updates on new resources.
      </p>

      <form id="download-form" class="space-y-4">
        <input type="hidden" id="resource-id" />
        <input type="hidden" id="resource-title" />
        <input type="hidden" id="download-url" />

        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">
            Email Address *
          </label>
          <input
            type="email"
            id="download-email"
            required
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
            placeholder="your@email.com"
          />
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">
            Company (Optional)
          </label>
          <input
            type="text"
            id="download-company"
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
            placeholder="Your Company"
          />
        </div>

        <div class="flex items-start">
          <input type="checkbox" id="newsletter-opt-in" class="mt-1 mr-2" checked />
          <label for="newsletter-opt-in" class="text-sm text-gray-600">
            Send me updates on new resources and industry insights
          </label>
        </div>

        <div class="flex gap-3">
          <button
            type="button"
            onclick="closeDownloadModal()"
            class="flex-1 bg-gray-200 text-gray-700 font-semibold py-3 px-6 rounded-lg hover:bg-gray-300 transition"
          >
            Cancel
          </button>
          <button
            type="submit"
            class="flex-1 bg-primary text-white font-semibold py-3 px-6 rounded-lg hover:bg-primary/90 transition"
          >
            Download Now
          </button>
        </div>
      </form>
    </div>
  </div>
</BaseLayout>

<script define:vars={{ resources, categories }}>
  // Resource filtering
  function filterResources(categoryId) {
    // Update filter buttons
    document.querySelectorAll('.filter-btn').forEach(btn => {
      btn.classList.remove('bg-primary', 'text-white', 'border-primary');
      btn.classList.add('border-gray-200', 'text-gray-600');
    });

    document.querySelector(`[data-category="${categoryId}"]`).classList.add('bg-primary', 'text-white', 'border-primary');
    document.querySelector(`[data-category="${categoryId}"]`).classList.remove('border-gray-200', 'text-gray-600');

    // Filter resource cards
    document.querySelectorAll('.resource-card').forEach(card => {
      const cardCategory = card.dataset.category;
      const shouldShow = categoryId === 'all' || cardCategory === categoryId;
      card.style.display = shouldShow ? 'block' : 'none';
    });

    // Track analytics
    if (window.analytics) {
      window.analytics.trackEngagement('Resource Filter', categoryId);
    }
  }

  // Download resource function
  function downloadResource(resourceId, title, downloadUrl) {
    // Show download modal
    document.getElementById('resource-id').value = resourceId;
    document.getElementById('resource-title').value = title;
    document.getElementById('download-url').value = downloadUrl;
    document.getElementById('download-modal').classList.remove('hidden');

    // Track analytics
    if (window.analytics) {
      window.analytics.trackEngagement('Download Intent', resourceId);
    }
  }

  // Close download modal
  function closeDownloadModal() {
    document.getElementById('download-modal').classList.add('hidden');
  }

  // Initialize page
  document.addEventListener('DOMContentLoaded', function() {
    // Set up filter buttons
    document.querySelectorAll('.filter-btn').forEach(btn => {
      btn.addEventListener('click', (e) => {
        filterResources(e.target.dataset.category);
      });
    });

    // Set initial filter
    filterResources('all');

    // Handle download form submission
    document.getElementById('download-form').addEventListener('submit', async function(e) {
      e.preventDefault();

      const resourceId = document.getElementById('resource-id').value;
      const email = document.getElementById('download-email').value;
      const company = document.getElementById('download-company').value;
      const newsletterOptIn = document.getElementById('newsletter-opt-in').checked;
      const downloadUrl = document.getElementById('download-url').value;

      try {
        // Track download
        if (window.analytics) {
          window.analytics.trackDownload(resourceId, 'PDF');
          window.analytics.trackGoal('Resource Download');
        }

        // Simulate API call to track download
        // In production, send this data to your backend
        console.log('Download tracking:', {
          resourceId,
          email,
          company,
          newsletterOptIn,
          timestamp: new Date().toISOString()
        });

        // Trigger actual download
        const link = document.createElement('a');
        link.href = downloadUrl;
        link.download = '';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);

        // Close modal
        closeDownloadModal();

        // Show success message
        alert('Download started! Check your downloads folder.');

      } catch (error) {
        console.error('Download error:', error);
        alert('Download failed. Please try again or contact support.');
      }
    });

    // Close modal when clicking outside
    document.getElementById('download-modal').addEventListener('click', function(e) {
      if (e.target === this) {
        closeDownloadModal();
      }
    });

    // Track page analytics
    if (window.analytics) {
      window.analytics.trackEvent('Resources Page View', {
        'Total Resources': resources.length,
        'Featured Resources': resources.filter(r => r.featured).length
      });
    }
  });

  // Make functions global
  window.downloadResource = downloadResource;
  window.closeDownloadModal = closeDownloadModal;
</script>