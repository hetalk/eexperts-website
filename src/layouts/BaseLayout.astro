---
// Last Updated: 2025-09-16 08:19:10 IST
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Analytics from '../components/Analytics.astro';
import LiveChatWidget from '../components/LiveChatWidget.astro';

export interface Props {
  title: string;
  description?: string;
  ogImage?: string;
}

const { 
  title, 
  description = 'Ritesource Infosystems LLP and Efficiency Experts Data Solutions LLP - Excellence in Quality Assurance and Data Solutions. 17+ years of experience, 65+ team members, serving global clients.',
  ogImage = '/og-image.png'
} = Astro.props;

const siteUrl = 'https://eexperts.info'; // Update with your actual domain
const fullOgImage = `${siteUrl}${ogImage}`;
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    
    <!-- Primary Meta Tags -->
    <title>{title} | Ritesource & eExperts</title>
    <meta name="title" content={`${title} | Ritesource & eExperts`} />
    <meta name="description" content={description} />
    <meta name="keywords" content="Quality Assurance, Healthcare Documentation, Software Testing, Geospatial Analysis, Electronics Data, HIPAA Compliant, Gujarat, India, Ahmedabad, Valsad" />
    <meta name="robots" content="index, follow" />
    <meta name="language" content="English" />
    <meta name="author" content="Ritesource & eExperts" />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={siteUrl} />
    <meta property="og:title" content={`${title} | Ritesource & eExperts`} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={fullOgImage} />
    <meta property="og:site_name" content="Ritesource & eExperts" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={siteUrl} />
    <meta property="twitter:title" content={`${title} | Ritesource & eExperts`} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={fullOgImage} />
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    
    <!-- Content Security Policy -->
    <meta http-equiv="Content-Security-Policy" content="
      default-src 'self';
      script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google.com https://www.gstatic.com;
      style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
      font-src 'self' https://fonts.gstatic.com;
      img-src 'self' data: https:;
      connect-src 'self' https://api.whatsapp.com;
      frame-src 'self' https://www.google.com;
    ">
    
    <!-- Theme Color -->
    <meta name="theme-color" content="#003366" />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={`${siteUrl}${Astro.url.pathname}`} />
    
    <!-- Dark Mode Script (before body loads to prevent flash) -->
    <script is:inline>
      // Check for saved theme preference or default to 'light'
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();
      
      if (theme === 'dark') {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
      
      window.localStorage.setItem('theme', theme);
    </script>
  </head>
  <body class="bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-200">
    <Header />
    <main>
      <slot />
    </main>
    <Footer />
    
    <!-- Dark Mode Toggle Script -->
    <script>
      function toggleDarkMode() {
        const html = document.documentElement;
        const isDark = html.classList.contains('dark');
        
        if (isDark) {
          html.classList.remove('dark');
          localStorage.setItem('theme', 'light');
        } else {
          html.classList.add('dark');
          localStorage.setItem('theme', 'dark');
        }
      }
      
      // Make function available globally
      window.toggleDarkMode = toggleDarkMode;
    </script>
    
    <!-- Analytics Script (Plausible - Privacy Friendly) -->
    <!-- Uncomment and update when ready to use -->
    <!-- <script defer data-domain="yourdomain.com" src="https://plausible.io/js/script.js"></script> -->
    
    <!-- Schema.org Structured Data for Organization -->
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Organization",
        "name": "Ritesource Infosystems & Efficiency Experts Data Solutions",
        "alternateName": ["Ritesource", "eExperts"],
        "url": "https://eexperts.info",
        "logo": "https://eexperts.info/logo.png",
        "description": "Quality Assurance and Data Solutions provider with 17+ years of experience",
        "foundingDate": "2008",
        "founders": [
          {
            "@type": "Person",
            "name": "Hetal Khandwala"
          },
          {
            "@type": "Person",
            "name": "Mital Desai"
          }
        ],
        "address": [
          {
            "@type": "PostalAddress",
            "streetAddress": "D-607 Ganesh Glory-11, Jagatpur road, off SG Highway",
            "addressLocality": "Ahmedabad",
            "addressRegion": "Gujarat",
            "postalCode": "382470",
            "addressCountry": "IN"
          },
          {
            "@type": "PostalAddress",
            "streetAddress": "506, 5th floor, Millennium Empire, Near D-Mart",
            "addressLocality": "Valsad",
            "addressRegion": "Gujarat",
            "postalCode": "396001",
            "addressCountry": "IN"
          }
        ],
        "contactPoint": {
          "@type": "ContactPoint",
          "contactType": "customer service",
          "availableLanguage": ["English", "Hindi", "Gujarati"],
          "areaServed": "Worldwide"
        },
        "numberOfEmployees": {
          "@type": "QuantitativeValue",
          "value": 65
        },
        "knowsAbout": [
          "Quality Assurance",
          "Healthcare Documentation",
          "Medical Transcription",
          "Software Testing",
          "Geospatial Analysis",
          "Electronics Data Services",
          "AI Workflows",
          "HIPAA Compliance"
        ],
        "slogan": "Precision Quality Assurance & Advanced Data Solutions",
        "aggregateRating": {
          "@type": "AggregateRating",
          "ratingValue": "4.9",
          "reviewCount": "45"
        }
      }
    </script>

    <!-- Analytics -->
    <Analytics />

    <!-- Live Chat Widget -->
    <LiveChatWidget />

    <!-- Service Worker Registration -->
    <script is:inline>
      // Register service worker for offline functionality
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', async function() {
          try {
            const registration = await navigator.serviceWorker.register('/sw.js');
            console.log('Service Worker registered successfully:', registration.scope);

            // Handle service worker updates
            registration.addEventListener('updatefound', () => {
              const newWorker = registration.installing;
              if (newWorker) {
                newWorker.addEventListener('statechange', () => {
                  if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {
                    // New content is available, prompt user to refresh
                    if (confirm('New content is available! Would you like to refresh to get the latest version?')) {
                      newWorker.postMessage({ type: 'SKIP_WAITING' });
                      window.location.reload();
                    }
                  }
                });
              }
            });

            // Track service worker analytics
            if (window.analytics) {
              window.analytics.trackEvent('Service Worker', {
                'Status': 'Registered',
                'Scope': registration.scope
              });
            }

          } catch (error) {
            console.error('Service Worker registration failed:', error);

            // Track service worker errors
            if (window.analytics) {
              window.analytics.trackEvent('Service Worker', {
                'Status': 'Failed',
                'Error': error.message
              });
            }
          }
        });

        // Listen for service worker messages
        navigator.serviceWorker.addEventListener('message', (event) => {
          if (event.data && event.data.type === 'CACHE_UPDATED') {
            console.log('Cache updated:', event.data.payload);
          }
        });
      }

      // Network status monitoring
      function handleNetworkChange() {
        if (window.analytics) {
          window.analytics.trackEvent('Network Status', {
            'Status': navigator.onLine ? 'Online' : 'Offline',
            'Timestamp': new Date().toISOString()
          });
        }
      }

      window.addEventListener('online', handleNetworkChange);
      window.addEventListener('offline', handleNetworkChange);
    </script>
  </body>
</html>